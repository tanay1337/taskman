#!/usr/bin/sh

# Data locations
DATA_DIR=~/.local/share/taskman
DATABASE=~/.local/share/taskman/taskman.db

# Check and create the data directory
if [[ ! -d $DATA_DIR ]]; then
  mkdir $DATA_DIR
fi

# Check and create the sqlite3 database
if [[ ! -f $DATABASE ]]; then
  COMMAND="create table tasks (Task TEXT, Label TEXT, Priority TEXT, Created_Time time, Created_Date date);"
  echo "$COMMAND" | sqlite3 $DATABASE
fi

function new_task() {
  TITLE=$(gum input --placeholder "Your task goes here")
  LABEL=$(gum input --placeholder "Label (optional)")
  echo "Select priority level"
  PRIORITY=$(gum choose High Medium Low)

  COMMAND="insert into tasks (Task, Label, Priority, Created_Time, Created_Date) values ('${TITLE}', '${LABEL}', '${PRIORITY}', time('now'), date('now'));"
  echo "$COMMAND" | sqlite3 $DATABASE 

  echo "Task added"
}

function show_tasks() {
  COMMAND="select rowid as ID, Task, Label, Priority, Created_Time as 'Created Time', Created_Date as 'Created Date' from tasks order by case Priority when 'High' then 1 when 'Medium' then 2 else 3 end;"
  echo "$COMMAND" | sqlite3 -cmd ".mode column" $DATABASE | gum filter
}

function search_tasks() {
  show_tasks | gum filter
}

function remove_task() {
  TASK_ID=$(search_tasks | cut -d ' ' -f 1)
  COMMAND="delete from tasks where rowid = $TASK_ID;"
  gum confirm && echo "$COMMAND" | sqlite3 $DATABASE && echo "Task removed"
}

ARG=$1

case $ARG in
  "new" )
    new_task ;;
  "show" | "" )
    show_tasks ;;
  "search" )
    search_tasks ;;
  "remove" )
    remove_task ;;
esac

#!/usr/bin/sh

# Data locations
DATA_DIR=~/.local/share/taskman
DATABASE=~/.local/share/taskman/taskman.db

# Check and create the data directory
if [[ ! -d $DATA_DIR ]]; then
  mkdir $DATA_DIR
fi

# Check and create the sqlite3 database
if [[ ! -f $DATABASE ]]; then
  COMMAND="create table tasks (Task TEXT, Label TEXT, Priority TEXT, Created_Time time, Created_Date date, Status);"
  echo "$COMMAND" | sqlite3 $DATABASE
fi

function new_task() {
  TITLE=$(gum input --placeholder "Your task goes here")
  LABEL=$(gum input --placeholder "Label (optional)")
  echo "Select priority level"
  PRIORITY=$(gum choose High Medium Low)

  COMMAND="insert into tasks (Task, Label, Priority, Created_Time, Created_Date, Status) values ('${TITLE}', '${LABEL}', '${PRIORITY}', time('now'), date('now'), 'Open');"
  echo "$COMMAND" | sqlite3 $DATABASE 

  echo "Task added"
}

function show_tasks() {
  COMMAND="select count(*) from tasks where Status = 'Open';"
  COUNT=$(echo "$COMMAND" | sqlite3 $DATABASE)

  if [[ ${COUNT} = 0 ]]; then
    echo "You are all caught up - no open tasks"
  else
    COMMAND="select rowid as ID, Task, Label, Priority, Created_Time as 'Created Time', Created_Date as 'Created Date' from tasks where Status = 'Open' order by case Priority when 'High' then 1 when 'Medium' then 2 else 3 end;"
    echo "$COMMAND" | sqlite3 -cmd ".mode column" $DATABASE | gum table
  fi
}

function show_summary() {
  COMMAND="select count(*) from tasks where Status = 'Open';"
  COUNT=$(echo "$COMMAND" | sqlite3 $DATABASE)

  if [[ ${COUNT} = 0 ]]; then
    echo "You are all caught up - no open tasks"
  else
    echo "You have ${COUNT} open tasks."
  fi
}

function send_notification() {
  SUMMARY=$(show_summary)
  notify-send -u normal "Taskman" "${SUMMARY}"
}

function search_tasks() {
  COMMAND="select count(*) from tasks where Status = 'Open';"
  COUNT=$(echo "$COMMAND" | sqlite3 $DATABASE)

  if [[ ${COUNT} = 0 ]]; then
    echo "There are no open tasks to search"
  else
    COMMAND="select rowid as ID, Task, Label, Priority, Created_Time as 'Created Time', Created_Date as 'Created Date' from tasks where Status = 'Open' order by case Priority when 'High' then 1 when 'Medium' then 2 else 3 end;"
    echo "$COMMAND" | sqlite3 -cmd ".mode column" $DATABASE | gum filter
  fi
}

function finish_task() {
  COMMAND="select count(*) from tasks where Status = 'Open';"
  COUNT=$(echo "$COMMAND" | sqlite3 $DATABASE)

  if [[ ${COUNT} = 0 ]]; then
    echo "There are no open tasks"
  else
    TASK_ID=$(show_tasks | cut -d ' ' -f 1)
    COMMAND="update tasks set Status = 'Done' where rowid = $TASK_ID;"
    gum confirm && echo "$COMMAND" | sqlite3 $DATABASE && echo "Task marked as done"
  fi
}

function finished_tasks() {
  COMMAND="select count(*) from tasks where Status = 'Done';"
  COUNT=$(echo "$COMMAND" | sqlite3 $DATABASE)
  if [[ ${COUNT} = 0 ]]; then
    echo "Nothing to see here"
  else
    COMMAND="select rowid as ID, Task, Label, Priority, Created_Time as 'Created Time', Created_Date as 'Created Date', Status from tasks where Status = 'Done' order by case Priority when 'High' then 1 when 'Medium' then 2 else 3 end;"
    echo "$COMMAND" | sqlite3 -cmd ".mode column" $DATABASE | gum table
  fi
}

function remove_task() {
  COMMAND="select count(*) from tasks where Status = 'Open';"
  COUNT=$(echo "$COMMAND" | sqlite3 $DATABASE)

  if [[ ${COUNT} = 0 ]]; then
    echo "There are no open tasks to search"
  else
    TASK_ID=$(show_tasks | cut -d ' ' -f 1)
    COMMAND="delete from tasks where rowid = $TASK_ID;"
    gum confirm && echo "$COMMAND" | sqlite3 $DATABASE && echo "Task removed"
  fi
}

function help_message() {
        echo "╭──────────────────────────────────────────────────────────────────╮"
        echo "│                            Taskman                               │"
        echo "╰──────────────────────────────────────────────────────────────────╯"
        echo ""
        echo "USAGE:"
        echo "  taskman [options]"
        echo ""
        echo "OPTIONS:"
        echo "  -h, help                      Prints this help message"
        echo "  -n, new                       Create a new task"
        echo "  -u, summary                   Prints a summary of open tasks"
        echo "  -s, show                      Show all open tasks"
        echo "  -S, search                    Search through open tasks"
        echo "  -d, done                      Mark a task as done"
        echo "  -r, remove                    Remove a task"
        echo "  -f, finished                  Show all the tasks marked as done"
        echo "  -o, notify                    Sends a notification about open tasks"
        echo ""
        echo "╭──────────────────────────────────────────────────────────────────╮"
        echo "│               https://github.com/tanay1337/taskman               │"
        echo "╰──────────────────────────────────────────────────────────────────╯"
}

ARG=$1

case $ARG in
  "help" | "-h" )
    help_message ;;
  "new" | "-n" )
    new_task ;;
  "summary" | "-u" )
    show_summary ;;
  "show" | "" | "-s" )
    show_tasks ;;
  "search" | "-S" )
    search_tasks ;;
  "remove" | "-r" )
    remove_task ;;
  "done" | "finish" | "-d" )
    finish_task ;;
  "finished" | "-f" )
    finished_tasks ;;
  "notify" | "-o" )
    send_notification ;;
esac
